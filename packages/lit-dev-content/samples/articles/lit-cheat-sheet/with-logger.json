{
  "extends": "/samples/base.json",
  "files": {
    "_visual-logger.ts": {
      "hidden": true,
      "content": "import {LitElement, html, css} from 'lit';\nimport {customElement} from 'lit/decorators.js';\nimport {SignalWatcher, signal, watch} from '@lit-labs/signals';\n\nconst log = signal<unknown[][]>([]);\n\nconst oldLog = window.console.log\nwindow.console.log = (...values: unknown[]) => {\n  log.set([...log.get(), values]);\n  oldLog(...values)\n};\n\nconst globalStyles = new CSSStyleSheet();\n\nglobalStyles.replaceSync(`body {\n  display: flex;\n}\n  \nbody > * {\n  flex: 1\n}`)\n\ndocument.adoptedStyleSheets.push(globalStyles);\n\n@customElement('visual-logger')\nexport class MyElement extends SignalWatcher(LitElement) {\n  render() {\n    return html`\n      <div id=\"log\">\n        <b>Log:</b>\n        <hr/>\n          ${log.get().toReversed().map(val => html`<p>${val.join(' ')}</p>`)}\n      </div>\n    `;\n  }\n  \n  static styles = css`\n    #log {\n      display: block;\n      max-height: 100dvh;\n    }\n      \n    p {\n      margin: 0;\n      font-family: monospace;\n    }\n  `;\n}"
    }
  }
}
